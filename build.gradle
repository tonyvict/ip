plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'checkstyle'
    id 'org.openjfx.javafxplugin' version '0.1.0'
}

java {
    toolchain { languageVersion = JavaLanguageVersion.of(17) }
}

repositories { mavenCentral() }


ext {
    javaFxVersion = '17.0.7'
}


def osClassifier() {
    def os = org.gradle.internal.os.OperatingSystem.current()
    if (os.isWindows()) return 'win'
    if (os.isMacOsX())  return 'mac'
    return 'linux'
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly   'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    // ---- JavaFX modules you actually use (controls/fxml/graphics) ----
    implementation "org.openjfx:javafx-base:${javaFxVersion}:${osClassifier()}"
    implementation "org.openjfx:javafx-graphics:${javaFxVersion}:${osClassifier()}"
    implementation "org.openjfx:javafx-controls:${javaFxVersion}:${osClassifier()}"
    implementation "org.openjfx:javafx-fxml:${javaFxVersion}:${osClassifier()}"
}


javafx {
    version = javaFxVersion
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.graphics']
}

application {
    // Your launcher class
    mainClass = 'csproject.gui.Launcher'
}


jar {
    manifest { attributes 'Main-Class': application.mainClass }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true
        showStandardStreams = false
    }
}


shadowJar {
    archiveBaseName = "Tommy"
    archiveClassifier = null
}

run {
    standardInput = System.in
}

checkstyle { toolVersion = '11.0.0' }
